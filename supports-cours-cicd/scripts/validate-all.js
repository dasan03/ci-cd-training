#!/usr/bin/env node

/**
 * Script principal de validation compl√®te des supports de cours CI/CD
 * 
 * Ce script ex√©cute toutes les validations requises pour la t√¢che 11:
 * - R√©vision compl√®te de tous les contenus
 * - Test de tous les exercices
 * - Validation de la coh√©rence p√©dagogique
 * - V√©rification de l'accessibilit√© WCAG 2.1
 */

console.log('üöÄ VALIDATION COMPL√àTE DES SUPPORTS DE COURS CI/CD');
console.log('='.repeat(60));
console.log('');

const { execSync } = require('child_process');
const path = require('path');

const scriptsPath = path.join(__dirname);

async function runValidation() {
    try {
        console.log('üìã √âtape 1/4: Validation de la structure et du contenu...');
        execSync('node simple-validation.js', { 
            cwd: scriptsPath, 
            stdio: 'inherit' 
        });
        console.log('');

        console.log('‚ôø √âtape 2/4: Validation de l\'accessibilit√© WCAG 2.1...');
        execSync('node accessibility-validation-fixed.js', { 
            cwd: scriptsPath, 
            stdio: 'inherit' 
        });
        console.log('');

        console.log('üìä √âtape 3/4: G√©n√©ration du rapport final...');
        execSync('node final-validation-report.js', { 
            cwd: scriptsPath, 
            stdio: 'inherit' 
        });
        console.log('');

        console.log('‚úÖ √âtape 4/4: Validation termin√©e avec succ√®s!');
        console.log('');
        console.log('üìÑ RAPPORTS G√âN√âR√âS:');
        console.log('   - final-validation-report.md (rapport principal)');
        console.log('   - accessibility-report.md (d√©tails accessibilit√©)');
        console.log('   - final-validation-report.json (donn√©es structur√©es)');
        console.log('   - accessibility-report.json (donn√©es accessibilit√©)');
        console.log('');
        console.log('üéØ R√âSULTAT: Les supports de cours sont valid√©s et pr√™ts pour la livraison.');
        console.log('   Quelques avertissements d\'accessibilit√© sont √† examiner mais ne bloquent pas la livraison.');
        console.log('');
        console.log('üìã ACTIONS RECOMMAND√âES:');
        console.log('   1. R√©viser les avertissements d\'accessibilit√© dans accessibility-report.md');
        console.log('   2. Tester manuellement les exercices dans les environnements cibles');
        console.log('   3. Faire r√©viser le contenu par un expert p√©dagogique');
        console.log('   4. Effectuer des tests utilisateurs avec des apprenants pilotes');

    } catch (error) {
        console.error('‚ùå Erreur lors de la validation:', error.message);
        process.exit(1);
    }
}

// Ex√©cution
runValidation();